///////////////////////////////////////////////////////////
//  Moteur.cs
//  Implementation of the Class Moteur
//  Generated by Enterprise Architect
//  Created on:      14-juin-2021 16:27:56
//  Original author: sophi
///////////////////////////////////////////////////////////

namespace ClassLibraryPourLaVoiture
{
	public class Moteur {

		private bool estDemarre;
		private int nbCV;

		public bool EstDemarre { get => estDemarre; }
		public int NbCV { get => nbCV; }



		//Constructeur par defaut
		//public Moteur()
		//{
		//	estDemarre = false;
		//	nbCV = 4;

		//}

        // interdependance
		public Moteur()
			:this(false,4)
        {

        }



        // constructeur classique
        public Moteur(bool estDeemarre, int nbCV)
		{
			this.estDemarre = estDeemarre;
			this.nbCV = nbCV;
		}
		//constructeur par recopie ou ":this(_copieMoteur.estDemarre,_copieMoteur.nbCV)"
		public Moteur(Moteur _copieMoteur)
		{
			 estDemarre=_copieMoteur.estDemarre ;
			 nbCV=_copieMoteur.nbCV ;

		}

		
		
		

		public bool Demarrer()
		{
			bool demare=false ;
            if (estDemarre==false)
            {
				estDemarre = true;
				demare = true;

            }
            else
            {
				demare = false;
			}
			return demare;
		}
		public bool EteindreMoteur()			
		{
			bool eteint = false;
			if (estDemarre == true)
			{
				estDemarre = false;
				eteint = true;

			}
			else
			{
				eteint = false;
			}
			return eteint;
		}


		public  bool Entrainer(Roue  maRoueMotrice1, Roue maRoueMotrice2)
		{
			bool entraine = false;
            if (estDemarre == true )// && maRoueMotrice1.Tourner()==false && maRoueMotrice2.Tourner() == false)
            {
				bool entraineRoueMotrice1 = maRoueMotrice1.Tourner();
				bool entraineRoueMotrice2 = maRoueMotrice2.Tourner();
				entraine = entraineRoueMotrice1 && entraineRoueMotrice2;

			}
			return entraine;
		}
		public bool ArreterEntrainer(Roue maRoueMotrice1, Roue maRoueMotrice2)
		{
			bool arreterEntraine = false;
			if (estDemarre == true)// && maRoueMotrice1.Tourner()==false && maRoueMotrice2.Tourner() == false)
			{
				bool arreterEntraineRoueMotrice1 = maRoueMotrice1.ArreterTourner();
				bool arreterEntraineRoueMotrice2 = maRoueMotrice2.ArreterTourner();
				arreterEntraine = arreterEntraineRoueMotrice1 && arreterEntraineRoueMotrice2;

			}
			return arreterEntraine;
		}

	}//end Moteur

}//end namespace Voiture