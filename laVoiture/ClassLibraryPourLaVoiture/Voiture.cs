///////////////////////////////////////////////////////////
//  Voiture.cs
//  Implementation of the Class Voiture
//  Generated by Enterprise Architect
//  Created on:      14-juin-2021 16:27:52
//  Original author: sophi
///////////////////////////////////////////////////////////





using System.Collections.Generic;

namespace ClassLibraryPourLaVoiture
{
	public class Voiture {

		private int compteurEnKM;		
		private Moteur sonMoteur;
		Dictionary<string, Roue> mesRoues;

        public int CompteurEnKM { get => compteurEnKM; }
        public Moteur SonMoteur { get => sonMoteur;  }
        public Dictionary<string, Roue> MesRoues { get => mesRoues; }


        //Constructeur par defaut;
        public Voiture()
		{
			compteurEnKM = 0;
			sonMoteur = new Moteur();
			mesRoues= new Dictionary<string, Roue>();
			mesRoues.Add("roueMotriceAvtGauche", new Roue());
			mesRoues.Add("roueMotriceAvtDroite", new Roue());
			mesRoues.Add("roueARDroite", new Roue());
			mesRoues.Add("roueARGauche", new Roue());

		}
		// constructeur classique
		public Voiture(int compteurEnKM,Moteur sonMoteur, Dictionary<string, Roue> mesRoues)
        {
			this.compteurEnKM = compteurEnKM;
			this.sonMoteur = sonMoteur;
			this.mesRoues = mesRoues;

		}
		//constructeur par recopie
		public Voiture(Voiture _copieVoiture)
        {
			compteurEnKM = _copieVoiture.compteurEnKM;
			sonMoteur = _copieVoiture.sonMoteur;
			mesRoues = _copieVoiture.mesRoues;
        }
	

		public bool Arreter()
		{

			return true;
		}

		public bool Avancer()
		{

			return false;
		}

		public bool Demarrer()
		{ bool demarer = false;
			if (sonMoteur.Demarrer() == false)
            {
				sonMoteur.Demarrer();
				demarer = true;
			}
            else
            {
				demarer = false;
			}

			return demarer;

            
			
		}

	}//end Voiture

}//end namespace Voiture