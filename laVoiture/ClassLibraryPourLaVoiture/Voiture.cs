///////////////////////////////////////////////////////////
//  Voiture.cs
//  Implementation of the Class Voiture
//  Generated by Enterprise Architect
//  Created on:      14-juin-2021 16:27:52
//  Original author: sophi
///////////////////////////////////////////////////////////





using System.Collections.Generic;

namespace ClassLibraryPourLaVoiture
{
	public class Voiture {

		private int compteurEnKM;		
		private Moteur sonMoteur;
		Dictionary<string, Roue> mesRoues;

        public int CompteurEnKM { get => compteurEnKM; }
        public Moteur SonMoteur { get => sonMoteur;  }
        public Dictionary<string, Roue> MesRoues { get => mesRoues; }


        //Constructeur par defaut;
        public Voiture()
		{
			compteurEnKM = 0;
			sonMoteur = new Moteur();
			mesRoues= new Dictionary<string, Roue>();
			mesRoues.Add("roueMotriceAvtGauche", new Roue());
			mesRoues.Add("roueMotriceAvtDroite", new Roue());
			mesRoues.Add("roueARDroite", new Roue());
			mesRoues.Add("roueARGauche", new Roue());

		}
		// constructeur classique
		public Voiture(int compteurEnKM,Moteur sonMoteur, Dictionary<string, Roue> mesRoues)
        {
			this.compteurEnKM = compteurEnKM;
			this.sonMoteur = sonMoteur;
			this.mesRoues = mesRoues;

		}
        //constructeur par recopie
        public Voiture(Voiture _copieVoiture)
        {
            this.compteurEnKM = _copieVoiture.compteurEnKM;
            this.sonMoteur = new Moteur(_copieVoiture.sonMoteur);
            this.mesRoues = new Dictionary<string, Roue>();
            this.mesRoues.Add("roueMotriceAvtGauche", new Roue(_copieVoiture.mesRoues["roueMotriceAvtGauche"]));
            this.mesRoues.Add("roueMotriceAvtDroite", new Roue(_copieVoiture.mesRoues["roueMotriceAvtDroite"]));
            this.mesRoues.Add("roueARDroite", new Roue(_copieVoiture.mesRoues["roueARDroite"]));
            this.mesRoues.Add("roueARGauche", new Roue(_copieVoiture.mesRoues["roueARGauche"]));
        }
        // public Voiture(Voiture _copieVoitureInter)
		//	:this(_copieVoitureInter.compteurEnKM,
		//		 (new Moteur (_copieVoitureInter.sonMoteur)),
		//		 (new Dictionary<string, Roue>(_copieVoitureInter.mesRoues)))


		//{

       // }
	

		public bool Arreter()
        {



			bool voitureArreter = this.sonMoteur.ArreterEntrainer(mesRoues["roueMotriceAvtGauche"], mesRoues["roueMotriceAvtDroite"]);


			return voitureArreter;
		}

		public bool Avancer()
		{
			bool fairAvancer= this.sonMoteur.Entrainer(mesRoues["roueMotriceAvtGauche"], mesRoues["roueMotriceAvtDroite"]);

			/*if (Demarrer()== true && mesRoues["roueMotriceAvtGauche"].Tourner() == false&& mesRoues["roueMotriceAvtDroite"].Tourner()==false)
			{

				 sonMoteur.EntrainerRoues(mesRoues["roueMotriceAvtGauche"], mesRoues["roueMotriceAvtDroite"]);
				fairAvancer = true;
            }
            else
            {
				fairAvancer = true;

			}*/

			return fairAvancer;
		}

		public bool Demarrer()
		{ bool demarer = false;
			if (sonMoteur.Demarrer() == false)
            {
				sonMoteur.Demarrer();
				demarer = true;
			}
            else
            {
				demarer = false;
			}

			return demarer;

            
			
		}
		public bool Eteindre()
		{
			bool eteinte = false;
			if (sonMoteur.EteindreMoteur() == false)
			{
				sonMoteur.EteindreMoteur();
				eteinte = true;
			}
			else
			{
				eteinte = false;
			}

			return eteinte;



		}

	}//end Voiture

}//end namespace Voiture