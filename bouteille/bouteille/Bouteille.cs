///////////////////////////////////////////////////////////
//  Bouteille.cs
//  Implementation of the Class Bouteille
//  Generated by Enterprise Architect
//  Created on:      03-juin-2021 11:01:51
//  Original author: sophi
///////////////////////////////////////////////////////////




namespace CodeBouteille
{
    public class Bouteille
    {

        private decimal contenanceEnL;
        private decimal contenuEnPourcentage;
        private bool ouvert;

        //propriétés
        private decimal ContenaceEnLitre
        {
            get { return contenanceEnL; }

        }
        private decimal ContenuEnPourcentage
        {
            get { return contenuEnPourcentage; }

        }
        private bool Ouvert
        {
            get { return ouvert; }

        }

        //constructeur par defaut
        //public Bouteille()
        //{
        //    this.contenanceEnL = 0;
        //    this.contenuEnPourcentage = 0;
        //    this.ouvert = true;

        //}

        public Bouteille(decimal _contenaceEnLitre, decimal _contenuEnPourcentage, bool _ouvert)
        {
            contenanceEnL = _contenaceEnLitre;
            contenuEnPourcentage = _contenuEnPourcentage;
            ouvert = _ouvert;
        }

        public bool Fermer()
        {
            if (ouvert == true)
            {
                ouvert = false;

            }

            return ouvert;


        }

        public bool Ouvrir()
        {
            if (ouvert == false)
            {
                ouvert = true;

            }
            return ouvert;


        }

        /// 
        /// <param name="aRajouterEnPourcentage"></param>
        public bool Remplir(decimal _aRajouterEnPourcentage)
        {
            bool peutRemplir;
            if (ouvert == true && contenuEnPourcentage < 100)
            {
                if ((_aRajouterEnPourcentage + contenuEnPourcentage) < 100)
                {
                    contenuEnPourcentage = _aRajouterEnPourcentage + contenuEnPourcentage;
                    peutRemplir = true;
                }
                else
                {
                    peutRemplir = false;
                }


            }
            else
            {
                peutRemplir = false;

            }
            return peutRemplir;

        }

        public bool RemplirTout()
        {
            if (ouvert == true && contenuEnPourcentage < 100)
            {
                contenuEnPourcentage = 100;
                return true;
            }
            else
            {
                return false;
            }


        }

        /// 
        /// <param name="aOterEnPourcentage"></param>
        public bool Vider(decimal _aOterEnPourcentage)
        {
            bool peutVider = false; // ST Optimisation
            if (ouvert == true && contenuEnPourcentage != 0 && contenuEnPourcentage > 0)
            { 
                if ((contenuEnPourcentage - _aOterEnPourcentage) != 0)
                {
                    contenuEnPourcentage -= _aOterEnPourcentage;
                    peutVider = true;
                }
            }
            return peutVider;


        }

        public bool ViderTout()
        {

            if (ouvert == true && contenuEnPourcentage != 0)
            {
                contenuEnPourcentage = 0;
                return true;
            }
            else
            {
                return false;
            }
        }
        public override string ToString()
        {
            return base.ToString() + " la bouteille est remplie a :" + contenuEnPourcentage + " %.";
        }

    }//end Bouteille

}//end namespace Bouteille